<div class="container">
	
	<div class="row">
    	<div class="col-xs-12 dashboard-heading">
        	<h1>Add students</h1>
    	</div>
    </div>

	<div class="row">
		<div class="col-xs-6">
			<div class="box-title">
				<h3>Add a student</h3>
			</div>
			<div class="col-xs-12 graph-box box" id="student-add-one">
				<form action="/students" method="POST">
					<input type="hidden" name="authenticity_token" value="<%= form_authenticity_token %>">
					<div class="form-group">
						<label>Email</label>
						<input class="form-control" type="text" name="user[email]" placeholder="Email">
					</div>
					<div class="form-group">
						<label>Name</label>
						<input class="form-control" type="text" name="user[name]" placeholder="Name">
					</div>
					<div class="form-group">
						<label>Select Cohort</label>
						<select class="form-control" name="user[cohort_id]">
							<% @cohorts.each do |cohort| %>
								<option value="<%= cohort.id %>"><%= cohort.start %> - <%= cohort.location.city %>, <%= cohort.location.state %></option>
							<% end %>
						</select><br>
					</div>
					<input class="btn btn-primary" type="submit" value="Add student">
				</form>
			</div>
		</div>

		<div class="col-xs-6">
			<div class="box-title">
				<h3>Add students in bulk (via .csv)</h3>
			</div>
			<div class="col-xs-12 graph-box box" id="student-add-multi">	
				<form action='/students' method='POST' enctype="multipart/form-data">
					<input type="hidden" name="authenticity_token" value="<%= form_authenticity_token %>">
					<input type="hidden" name="_method" value="PUT">
					<input type="hidden" id="the_data" name="csv_data">
					<div class="form-group">
						<label>Drag and drop CSV here:</label>
						<div class="form-control" id="add-student-drop-zone">
							<p>Drop files here</p>
						</div>
					</div>
					<div class="form-group">
						<output id="list"></output>
					</div>
					<input class="btn btn-primary" id="csv_submit" type="submit" value="Process CSV">
				</form>

			</div>

		</div>
	</div>
</div>

<div id="add-student-overlay">
	<div id="add-student-overlay-box">
		<div id="add-student-overlay-box-cancel">
			<%= image_tag 'xicon', id: 'add-student-overlay-box-cancel-icon' %>
		</div>
		<div id="add-student-overlay-box-content">
		<% if flash[:errors] %>
			<% flash[:errors].each do |message| %>
				<p><%= message %></p>
			<% end %>
		<% end %>
		<p>TEST MESSAGE</p>
		</div>
	</div>
	
</div>





<script type="text/javascript">
	


function handleFileSelect(evt) {
	evt.stopPropagation();
	evt.preventDefault();

	var files = evt.dataTransfer.files; // FileList object.
	var theFile = files[0];
	

	// files is a FileList of File objects. List some properties.
	var output = [];
	for (var i = 0, f; f = files[i]; i++) {
		output.push('<li><strong>', escape(f.name), '</strong> (', f.type || 'n/a', ') - ',
		f.size, ' bytes, last modified: ',
		f.lastModifiedDate ? f.lastModifiedDate.toLocaleDateString() : 'n/a',
		'</li>');
	}
	document.getElementById('list').innerHTML = '<ul>' + output.join('') + '</ul>';
	
	if (!theFile.name.match('\.csv')) {
        $('#list').css('color','red');
        $('#csv_submit').prop("disabled",true);
    } else {
    	$('#list').css('color','');
    	$('#csv_submit').prop("disabled",false);
    	readFile(theFile);
   
    	// console.log("BEFORE PROCESS: " + temp);
    	// poop = processData(String(temp));
    	// console.log(poop);
    }
}

function handleDragOver(evt) {
	evt.stopPropagation();
	evt.preventDefault();
	evt.dataTransfer.dropEffect = 'copy'; // Explicitly show this is a copy.
}


function readFile (file) {
    var reader = new FileReader();
    reader.onload = function () {
    	// document.getElementById('out').innerHTML = reader.result;
    	// var temp = processData(reader.result);
    	$('#the_data').val(reader.result);
    };
    // start reading the file. When it is done, calls the onload event defined above.
    reader.readAsBinaryString(file);
    console.log(reader);
};

function processData(allText) {
    var allTextLines = allText.split(/\r\n|\n/);
    var headers = allTextLines[0].split(',');
    var lines = [];
    for (var i=1; i<allTextLines.length; i++) {
        var data = allTextLines[i].split(',');
        if (data.length == headers.length) {

            var tarr = {}
            for (var j=0; j<headers.length; j++) {
                tarr[headers[j]] = data[j];
            }
            lines.push(tarr);
        }
    }
    return lines;
}


// Setup the dnd listeners.
var dropZone = document.getElementById('add-student-drop-zone');
dropZone.addEventListener('dragover', handleDragOver, false);
dropZone.addEventListener('drop', handleFileSelect, false);

$(document).ready( function() {
	$('#csv_submit').prop("disabled",true);
	$('#add-student-drop-zone').on('dragover', function(){
		$(this).css('background-color','red');
	});
	$('#add-student-drop-zone').on('dragleave', function(){
		$(this).css('background-color','');
	});
	$('#add-student-drop-zone').on('drop', function(){
		$(this).css('background-color','');
	});
});

</script>
